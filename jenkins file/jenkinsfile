pipeline{
    agent{
        node{
            label 'for-lab'
        }
    }

        options    {
                timestamps()
                buildDiscarder(logRotator(numToKeepStr: '1', artifactNumToKeepStr: '1'))
                timeout(time: 10, unit: 'MINUTES')
                disableConcurrentBuilds()
                }

    stages{
        stage ('checkout') {
            steps{
                git changelog: false, poll: false, url: 'https://github.com/Gowtham1437/for-practice.git'
            }
        }    
        stage ('maven build') {
            steps{
                sh 'mvn clean package'
            }
        } 

        stage ('docker build'){
            steps{
                script{
                withCredentials([string(credentialsId: 'docker_token', variable: 'docker_token')]) {
                sh 'docker login -u bobby4me -p ${docker_token}'
    }
}
                sh 'docker build . -t bobby4me/mynginx:v1'
                sh 'docker push bobby4me/mynginx:v1'
                echo 'pushing completed successfully!!!!!!'
            }
       
        }
    stage ('menifest checkout') {
            steps{
                git changelog: false, poll: false, url: 'https://github.com/Gowtham1437/aws-k8s-cicd.git'
            }
        }   
    stage ('k8s cicd') {
        steps{
            dir('manifests')
            {
                script{
                    withCredentials([string(credentialsId: 'k8s_token', variable: 'k8s_token')]) {
                    sh 'kubectl --server=https://FB0DCC44A76F6CE38FD05DD63E03A0FD.gr7.us-east-1.eks.amazonaws.com --insecure-skip-tls-verify --token=${k8s_token) apply -f deployment.yml'

                    sh 'kubectl --server=https://FB0DCC44A76F6CE38FD05DD63E03A0FD.gr7.us-east-1.eks.amazonaws.com --insecure-skip-tls-verify --token=${k8s_token) apply -f service.yml'
                    
                    sh 'kubectl --server=https://FB0DCC44A76F6CE38FD05DD63E03A0FD.gr7.us-east-1.eks.amazonaws.com --insecure-skip-tls-verify --token=${k8s_token) rollout restart deployment/java-app-deployment'
                    }      
                    echo "kubernetes deployment is done"

                    sh 'kubectl get deployments'
                    sh 'kubectl get services'
                 }
               } 
            }
        }
    }
}
